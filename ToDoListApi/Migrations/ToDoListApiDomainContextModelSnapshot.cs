// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListApi.Domains;

#nullable disable

namespace ToDoListApi.Migrations
{
    [DbContext(typeof(ToDoListApiDomainContext))]
    partial class ToDoListApiDomainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoListApi.Domains.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ToDoListApi.Domains.TagToDoListItem", b =>
                {
                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToDoListItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TagId", "ToDoListItemId");

                    b.HasIndex("ToDoListItemId");

                    b.ToTable("TagToDoListItems");
                });

            modelBuilder.Entity("ToDoListApi.Domains.ToDoListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("ToDoListItems");
                });

            modelBuilder.Entity("ToDoListApi.Domains.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDoListApi.Domains.Tag", b =>
                {
                    b.HasOne("ToDoListApi.Domains.User", "CreatedByUser")
                        .WithMany("Tags")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("ToDoListApi.Domains.TagToDoListItem", b =>
                {
                    b.HasOne("ToDoListApi.Domains.Tag", "Tag")
                        .WithMany("TagToDoListItems")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ToDoListApi.Domains.ToDoListItem", "ToDoListItem")
                        .WithMany("TagToDoListItems")
                        .HasForeignKey("ToDoListItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("ToDoListItem");
                });

            modelBuilder.Entity("ToDoListApi.Domains.ToDoListItem", b =>
                {
                    b.HasOne("ToDoListApi.Domains.User", "CreatedByUser")
                        .WithMany("ToDoListItems")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("ToDoListApi.Domains.Tag", b =>
                {
                    b.Navigation("TagToDoListItems");
                });

            modelBuilder.Entity("ToDoListApi.Domains.ToDoListItem", b =>
                {
                    b.Navigation("TagToDoListItems");
                });

            modelBuilder.Entity("ToDoListApi.Domains.User", b =>
                {
                    b.Navigation("Tags");

                    b.Navigation("ToDoListItems");
                });
#pragma warning restore 612, 618
        }
    }
}
